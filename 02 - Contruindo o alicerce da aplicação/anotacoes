Back -end -  MVC
Client -> JS.

Frameworks um modelo MVC no Front-end.
Versão 1.X
_____________________________________

Modulo: forma com que o AngularJS organiza a aplicação.
- é um recipiente para as diferentes partes de uma aplicação.
- é um recipiente para os controladores da aplicação.
- Controladores sempre pertencer a um módulo.


Exemplo:  Criando um módulo

<div ng-app="myApp">...</div>

<script>

var app = angular.module("myApp", []);

</script>

_____________________________________


Objeto Global: angular (script disponibilizado pelo angular);

angular.module('alurapic',[]); -> Criando modulo.
angular.module('alurapic').controller(); -> Criando Controller.

ng-app="alurapic" -> angular carrega o modulo automaticamente no inicio da aplicação.

View:  termo utilizado para paginas Web (front end)


{{angular expression}}
Exemplo:  <img src="{{foto.url}}" alt="{{foto.titulo}}"

_____________________________________

Controller:  é quem vai disponibilizar  os dados que a view precisa.
É uma boa prática criar os controller em arquivos separados.

Adicionar um controlador para a sua aplicação, e referem-se ao controlador com o ng-controller directiva:

Conversão no angular cada palavras iniciar com Letra maiscula na nomenclatura dos Controllers.

Exemplo: 

<div ng-app="myApp" ng-controller= "myCtrl" >
{{ firstName + " " + lastName }}
</div>

<script>

var app = angular.module( "myApp" , []);

app.controller( "myCtrl" , function($scope) {
    $scope.firstName = "John";
    $scope.lastName = "Doe";
});

</script>


OBS:  uma view pode ter muitos controllers.

-> DIRETIVAS:  comandos do angular com funcionalidade.
    ng-controller
    ng-app
_____________________________________

As funções podem poluir o espaço global
funções globais deve ser evitado em JavaScript. Eles podem ser facilmente substituídas ou destruídas por outros scripts.

AngularJS módulos reduz este problema, mantendo-se todas as funções locais para o módulo.

_____________________________________

$scope: é o escope que o controlador vai enxergar definido nas TAGs html.

Usamos Angular Expressions para abrir "lacunas" em views. 
Essa ideia remete ao uso de templates: modelos com uma base pronta, 
mas que possuem trechos de informações dinâmicas. 
Essas informações dinâmicas são fornecidas pelos nossos controllers. 
A sintaxe de uma AE é {{nomeDaPropriedade}}.


Data binding significa associação de dado, isto é,
podemos associar um dado à view através de Angular Expression e
qualquer mudança nesse dado refletirá na sua apresentação na view.